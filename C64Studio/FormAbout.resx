<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1JoAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>